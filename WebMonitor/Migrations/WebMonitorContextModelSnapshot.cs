// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebMonitor;

#nullable disable

namespace WebMonitor.Migrations
{
    [DbContext(typeof(WebMonitorContext))]
    partial class WebMonitorContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.9");

            modelBuilder.Entity("WebMonitor.Model.Db.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AllowedFeaturesId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AllowedFeaturesId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebMonitor.SupportedFeatures", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AmdGpuUsage")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("BatteryInfo")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CpuInfo")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CpuUsage")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DiskInfo")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DiskUsage")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("FileBrowser")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("FileDownload")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("FileUpload")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IntelGpuUsage")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("MemoryInfo")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("MemoryUsage")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NetworkUsage")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NvidiaGpuUsage")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NvidiaRefreshSettings")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ProcessAffinity")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ProcessPriority")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ProcessPriorityChange")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Processes")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Terminal")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("AllowedFeatures");
                });

            modelBuilder.Entity("WebMonitor.Model.Db.User", b =>
                {
                    b.HasOne("WebMonitor.SupportedFeatures", "AllowedFeatures")
                        .WithMany()
                        .HasForeignKey("AllowedFeaturesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AllowedFeatures");
                });
#pragma warning restore 612, 618
        }
    }
}
